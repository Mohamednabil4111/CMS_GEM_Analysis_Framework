
**************************************************
*                                                *
*	CHANGELOG: CMS_GEM_Analysis_Framework        *
*	VERSION: 1.0.4                               *
*	LAST UPDATE: Apr 25 2016                     *
*                                                *
**************************************************

Update: Apr 26th 2016
==================================================
->Fixed crash where invalid histogram pointer in VisualizeUniformity was causing a seg fault, need to use AnalyzeResponseUniformity::getDetector() in executable
->Added copy constructor and assignment operator to Uniformity::DetectorMPGD

Update: Apr 25th 2016
==================================================
->Added copy constructor and assignment operator to Uniformity::HistosPhysObj
->Added copy constructor and assignment operator to Uniformity::SummaryStatistics
->Added copy constructor and assignment operator to Uniformity::SectorSlice
->Added copy constructor and assignment operator to Uniformity::SectorPhi
->Added copy constructor and assignment operator to Uniformity::SectorEta

Update: Apr 24th 2016
==================================================
->Added new class Uniformity::VisualizeUniformity which inherits from Uniformity::AnalyzeResponseUniformity
->Class Uniformity::VisualizeUniformity makes a TCanvas for an input observable, the TCanvas has one pad for each SectorEta, the observable is drawn on the TCanvas

Update: Apr 22th 2016
==================================================
->Removing AnalysisCode.cpp, AnalysisCodeGE6_V1_fast_cl.cpp, AnalysisCodeGE6_V2.cpp, AnalysisCode_GE4_V1.cpp, and AnalysisCode_GE6_V1.cpp from repo
->Removing Makefile_SingleSpecAna.clang and Makefile_SingleSpecAna.gpp from repo
->Removing src/SingleSpectrumAnalyzer.cpp from repo
->AnalyzeResponseUniformityClusters will now store a "Summary" set of of histograms (sum of all SectorEta) when AnalyzeResponseUniformityClusters::StoreHistos is called
->AnalyzeResponseUniformityHits will now store a "Summary" set of of histograms (sum of all SectorEta) when AnalyzeResponseUniformityHits::StoreHistos is called

Update: Apr 11th 2016
==================================================
->Adding functionality for "hitADC" histogram to be created in the analysis
->Implemented vector for storing hit ADC values in Uniformity::Hit (e.g. Uniformity::Hit::vec_fADC )
->Implemented cut for saturated hit ADC values in Uniformity::SelParam (e.g. Uniformity::SelParam::iCut_ADCSat)
->Uniformity::ParameterLoaderAnalysis will now take a user input for the minimum ADC value for hits and the maximum ADC value for hits
->Uniformity::ParameterLoaderAnalysis will now check to see if the cut on the min hit time is >= 0; if not it will be reset to 0
->Uniformity::ParameterLoaderAnalysis will now check to see if the cut on the max hit time is <= 29; if not it will be reset to 29
->Uniformity::SelectorHit will now load and cut on hit ADC values

Update: Mar 15th 2016
==================================================
->Changing name of Uniformity::ClusterSelector to Uniformity::SelectorCluster
->Changing name of Uniformity::HitSelector to Uniformity::SelectorHit

Update: Mar 14th 2016
==================================================
->Re-naming the SelParamClusters struct in include/UniformityUtilityTypes.h to SelParam
->SelParam struct is now used for both Cluster and Hit selection

->Added in Uniformity::SectorPhi two data members to track minimum and maximum strip number

->Adding functionality to set Hit Selection criteria in Uniformity::ParameterLoaderAnalysis

->Renaming Uniformity::AnalyzeResponseUniformity to Uniformity::AnalyzeResponseUniformityClusters
->Adding new generic analysis class called Uniformity::AnalyzeResponseUniformity
->Uniformity::AnalyzeResponseUniformityClusters now inherits from Uniformity::AnalyzeResponseUniformity
->Adding new class Uniformity::AnalyzeResponseUniformityHits which inherits from Uniformity::AnalyzeResponseUniformity
->Making Uniformity::AnalyzeResponseUniformityClusters and Uniformity::AnalyzeResponseUniformityHits both friend classes of Uniformity::DetectorMPGD
->For now base analyzer class Uniformity::AnalyzeResponseUniformity is also a friend class of Uniformity::DetectorMPGD (maybe not needed...)

->Changes to Makefile.clang and Makefile.gpp to compile correctly the new classes.

->Renamed struct ClusterHistos to HistosPhysObj in include/UniformityUtilityTypes.h

Update: Mar 11th 2016
==================================================
->Adding support for a hit based analysis in addition to the cluster analysis
->Adding struct in include/UniformityUtilityTypes.h called "Hit"
->Adding a vector<Hit> object to struct SectorPhi

->Adding new generic Selector class called "Selector"
->Now ClusterSelector inherits from Selector
->Adding new class HitSelector which inherits from Selector
->We have moved setAnalysisParameters from ClusterSelector to Selector; also aSetupUniformity is now a protected data member of Selector (instead of private member of ClusterSelector)

->Added functionality to get and set Uniformity::Hit in Uniformity::DetectorMPGD; implementation follows what is done for Uniformity::Cluster

Update: Feb 23rd 2016
==================================================
->Created struct SummaryStatistics in include/UniformityUtilityTypes.h
->SummaryStatistics contains statistical variables
->An instance of SummaryStatistics has been added to SectorEta to track ADC Peak Position (from both fit & spectrum)

->Created struct ClusterHistos in include/UniformityUtilityTypes.h
->ClusterHistos now include an instance of the cluster histograms that were defined in SectorEta & SectorPhi
->An instance of ClusterHistos has been created in SectorEta & SectorPhi, increases functionality for expanding histo list

->Added to SectorEta two new std::multiset<float> objects (mset_fClustADC_Fit_PkPos, mset_fClustADC_Spec_PkPos) for tracking the results from the fit & TSpectrum
->These two new multisets are used in AnalyzeResponseUniformity::calcStatistics method

->Added AnalyzeResponseUniformity::calcStatistics method; sets the values of the SummaryStatistics container in SectorEta

Update: Feb 17th 2016
==================================================
->Changed DetectorMPGD and ParameterLoaderAmoreSRS
->Now the number of SectorPhi's per SectorEta is no longer hardcoded
->Instead the value of the "nbConnect" column in the AMORE mapping config file is used

Update: Feb 16th 2016
==================================================
->New feature, adding functionality to AnalyzResponseUniformity
->AnalyzeResponseUniformity will now be able to load previously created distributions and fit them
->See AnalyzeResponseUniformity::loadHistosFromFile()

Update: Feb 15th 2016
==================================================
->First stable release to the repository
->develop branch to be merged into the master branch
->Implementation of all fundamental classes completed
->Outstanding class includes only VisualizeUniformity
->Able to reproduce results of S. Colafranceschi from FIT
->Able to analyze detector data taken here at CERN

Update: Jan 26th 2016
==================================================
->Initial commit of repository
